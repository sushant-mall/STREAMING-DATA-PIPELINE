ADD JAR /usr/hdp/2.5.0.0-1245/hive/lib/hive-serdes-1.0-SNAPSHOT.jar;
ADD JAR /usr/hdp/2.5.0.0-1245/hive/lib/json-serde-1.3.7-jar-with-dependencies.jar;

set hive.support.sql11.reserved.keywords=false;
set mapred.map.tasks=5;

-- tweets_main
-- EEE MMM dd HH:mm:ss ZZZZZ yyyy
-- Wed Jun 21 02:59:59 +0000 2019

DROP TABLE IF EXISTS tweets_main;
CREATE TABLE IF NOT EXISTS tweets_main 
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
TBLPROPERTIES('serialization.null.format'='NULL')
AS SELECT id, 
       from_unixtime(unix_timestamp(created_at, "EEE MMM d HH:mm:ss Z yyyy"), 'yyyy-MM-dd') AS date, 
       from_unixtime(unix_timestamp(created_at, "EEE MMM d HH:mm:ss Z yyyy"), 'HH:mm:ss') AS time, 
       regexp_extract(source,"> *(.*?)</a>") AS src,
       favorited, 
       retweet_count,
       regexp_replace(text,"\n"," ") AS txt, 
       in_reply_to_screen_name
   FROM ${hiveconf:TAB};

-- tweets_retweeted_status
DROP TABLE IF EXISTS tweets_retweeted_status;
CREATE TABLE IF NOT EXISTS tweets_retweeted_status
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
TBLPROPERTIES('serialization.null.format'='NULL')
AS SELECT id, 
       regexp_replace(retweeted_status.text,"\n"," ") AS txt, 
       retweeted_status.user.screen_name, 
       retweeted_status.user.name 
   FROM ${hiveconf:TAB};

--tweets_entities_urls
DROP TABLE IF EXISTS tweets_entities_urls;
CREATE TABLE IF NOT EXISTS tweets_entities_urls 
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
TBLPROPERTIES('serialization.null.format'='NULL')
AS SELECT id,
       urls.expanded_url
   FROM ${hiveconf:TAB}
   LATERAL VIEW EXPLODE(entities.urls) t1 AS urls;

-- tweets_entities_user_mentions
DROP TABLE IF EXISTS tweets_entities_user_mentions;
CREATE TABLE IF NOT EXISTS tweets_entities_user_mentions
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n' 
STORED AS TEXTFILE
TBLPROPERTIES('serialization.null.format'='NULL')
AS SELECT id,
       user_mentions.screen_name,
       user_mentions.name
   FROM ${hiveconf:TAB}
   LATERAL VIEW EXPLODE(entities.user_mentions) t1 AS user_mentions;

-- tweets_entities_hashtags
DROP TABLE IF EXISTS tweets_entities_hashtags;
CREATE TABLE IF NOT EXISTS tweets_entities_hashtags 
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
TBLPROPERTIES('serialization.null.format'='NULL')
AS SELECT id,
       regexp_replace(hashtags.text,"\n"," ") AS txt
   FROM ${hiveconf:TAB}
   LATERAL VIEW EXPLODE(entities.hashtags) t1 AS hashtags;

-- tweets_user
DROP TABLE IF EXISTS tweets_user;
CREATE TABLE IF NOT EXISTS tweets_user 
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
TBLPROPERTIES('serialization.null.format'='NULL')
AS SELECT id,
       user.screen_name,
       user.name,
       user.friends_count,
       user.followers_count,
       user.statuses_count,
       user.verified,
       user.utc_offset,
       user.time_zone
   FROM ${hiveconf:TAB};